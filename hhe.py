import telebot
from telebot import types
import json
import os

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = '7365948334:AAH8cDVwQk5GYtjSIpzsfuzi423kOf93ATs'  
DATA_FILE = 'profile_data.json'

bot = telebot.TeleBot(TOKEN)

# === –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ===

def load_profile():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r') as f:
            return json.load(f)
    else:
        return {}

def save_profile(profile):
    with open(DATA_FILE, 'w') as f:
        json.dump(profile, f)

profile = load_profile()

# === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ===

def get_user_profile(user_id):
    if str(user_id) not in profile:
        profile[str(user_id)] = {
            'rating': 1500,
            'k': 40,
            'history': [],
            'tournament': 'Default Tournament',
            'tournament_changes': []
        }
        save_profile(profile)
    return profile[str(user_id)]

def calculate_change(user_rating, opponent_rating, result, k):
    expected = 1 / (1 + 10 ** ((opponent_rating - user_rating) / 400))
    change = k * (result - expected)
    return round(change, 1), expected

# === –ö–æ–º–∞–Ω–¥—ã ===

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, "\u2728 –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å—á–∏—Ç–∞—Ç—å —Ç–≤–æ–π —à–∞—Ö–º–∞—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥!\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/profile ‚Äî —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/calc ‚Äî –ø–æ—Å—á–∏—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞\n/edit ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –∏–ª–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç\n/tournament ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä\n/history ‚Äî –∏—Å—Ç–æ—Ä–∏—è —Ç—É—Ä–Ω–∏—Ä–∞\n/reset ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n/resettournament ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä")

@bot.message_handler(commands=['profile'])
def send_profile(message):
    user = get_user_profile(message.from_user.id)
    text = f"üìà –ü—Ä–æ—Ñ–∏–ª—å:\n–†–µ–π—Ç–∏–Ω–≥: {user['rating']}\n–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: {user['k']}\n–¢–µ–∫—É—â–∏–π —Ç—É—Ä–Ω–∏—Ä: {user['tournament']}\n\n–ò—Å—Ç–æ—Ä–∏—è —Ç—É—Ä–Ω–∏—Ä–∞:\n"
    if user['tournament_changes']:
        for change in user['tournament_changes']:
            text += f"\u2022 {change}\n"
    else:
        text += "(–ø–æ–∫–∞ –Ω–µ—Ç –ø–∞—Ä—Ç–∏–π)"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['edit'])
def edit_profile(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ù–∞–ø—Ä–∏–º–µ—Ä: 1500 40")
    bot.register_next_step_handler(msg, save_edited_profile)

def save_edited_profile(message):
    try:
        rating, k = map(int, message.text.split())
        user = get_user_profile(message.from_user.id)
        user['rating'] = rating
        user['k'] = k
        save_profile(profile)
        bot.send_message(message.chat.id, "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω!")
    except:
        bot.send_message(message.chat.id, "\u26a0\ufe0f –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –∫–æ–º–∞–Ω–¥—É /edit.")

@bot.message_handler(commands=['calc'])
def start_calc(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:")
    bot.register_next_step_handler(msg, ask_result)

def ask_result(message):
    try:
        opponent_rating = int(message.text)
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        btn1 = types.KeyboardButton('–ü–æ–±–µ–¥–∞')
        btn2 = types.KeyboardButton('–ù–∏—á—å—è')
        btn3 = types.KeyboardButton('–ü–æ—Ä–∞–∂–µ–Ω–∏–µ')
        markup.add(btn1, btn2, btn3)
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Ç–∏–∏:", reply_markup=markup)
        bot.register_next_step_handler(msg, calculate_rating_change, opponent_rating)
    except:
        bot.send_message(message.chat.id, "\u26a0\ufe0f –ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ /calc.")

def calculate_rating_change(message, opponent_rating):
    user = get_user_profile(message.from_user.id)
    result_text = message.text.lower()

    if result_text == '–ø–æ–±–µ–¥–∞':
        result = 1
    elif result_text == '–Ω–∏—á—å—è':
        result = 0.5
    elif result_text == '–ø–æ—Ä–∞–∂–µ–Ω–∏–µ':
        result = 0
    else:
        bot.send_message(message.chat.id, "\u26a0\ufe0f –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ /calc.")
        return

    change, expected = calculate_change(user['rating'], opponent_rating, result, user['k'])
    old_rating = user['rating']
    user['rating'] += round(change)
    change_text = f"\u2694\ufe0f –°—Ç–∞—Ä—ã–π —Ä–µ–π—Ç–∏–Ω–≥: {old_rating}\n–û–∂–∏–¥–∞–Ω–∏–µ: {round(expected*100,1)}%\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {result*100}%\n–ò–∑–º–µ–Ω–µ–Ω–∏–µ: {change}\n–ù–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥: {user['rating']}"

    # –ò—Å—Ç–æ—Ä–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
    user['tournament_changes'].append(f"{old_rating} ‚ûî {user['rating']} ({'+' if change>=0 else ''}{change})")

    save_profile(profile)
    bot.send_message(message.chat.id, change_text, reply_markup=types.ReplyKeyboardRemove())

@bot.message_handler(commands=['tournament'])
def set_tournament(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞:")
    bot.register_next_step_handler(msg, save_tournament)

def save_tournament(message):
    user = get_user_profile(message.from_user.id)
    user['tournament'] = message.text
    user['tournament_changes'] = []
    save_profile(profile)
    bot.send_message(message.chat.id, f"‚úÖ –¢—É—Ä–Ω–∏—Ä '{message.text}' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

@bot.message_handler(commands=['history'])
def show_history(message):
    user = get_user_profile(message.from_user.id)
    if user['tournament_changes']:
        text = f"üîç –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç—É—Ä–Ω–∏—Ä–µ '{user['tournament']}':\n"
        for change in user['tournament_changes']:
            text += f"\u2022 {change}\n"
    else:
        text = "(–ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç—É—Ä–Ω–∏—Ä–µ)"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['reset'])
def reset_profile(message):
    profile.pop(str(message.from_user.id), None)
    save_profile(profile)
    bot.send_message(message.chat.id, "\u274c –ü—Ä–æ—Ñ–∏–ª—å —Å–±—Ä–æ—à–µ–Ω. –ù–∞–±–µ—Ä–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")

@bot.message_handler(commands=['resettournament'])
def reset_tournament(message):
    user = get_user_profile(message.from_user.id)
    user['tournament_changes'] = []
    save_profile(profile)
    bot.send_message(message.chat.id, "‚ôªÔ∏è –ò—Å—Ç–æ—Ä–∏—è —Ç—É—Ä–Ω–∏—Ä–∞ —Å–±—Ä–æ—à–µ–Ω–∞.")

# === –ó–∞–ø—É—Å–∫ ===

print("\u2728 –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
bot.infinity_polling()